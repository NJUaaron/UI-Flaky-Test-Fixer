function cookieSet(e){if("undefined"==typeof document)return;var t="ftFix"+(new Date).getTime()+"="+JSON.stringify(e).replaceAll(";","")+"; expires="+new Date(Date.now()+8e3).toUTCString();console.log(t),document.cookie=t}function StartObserver(){if("undefined"!=typeof observer_exist&&1==observer_exist)return;console.log("Start mutaion oberver");new MutationObserver((function(e,t){var o=[];for(let t in e){const r=e[t];let a=convertRecord(r);o.push(a),"childList"===r.type?console.log("A child node has been added or removed."):"attributes"===r.type?console.log("The "+r.attributeName+" attribute was modified."):"characterData"===r.type&&console.log("Character data was modified.")}cookieSet(o)})).observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0,attributeOldValue:!0,characterDataOldValue:!0}),window.observer_exist=!0,console.log("Mutation observer started")}function convertRecord(e){var t={};t.target=convertNode(e.target),t.addedNodes=[];var o=e.addedNodes;for(let e=0;e<o.length;e++)t.addedNodes.push(convertNode(o[e]));t.removedNodes=[];var r=e.removedNodes;for(let e=0;e<r.length;e++)t.removedNodes.push(convertNode(r[e]));return t.type=e.type,t.attributeName=e.attributeName,t.oldValue=e.oldValue,t}function convertNode(e){var t={};return t.nodeName=e.nodeName,t.className=e.className,t.id=e.id,t.nodeType=e.nodeType,t.nodeValue=e.nodeValue,t.childElementCount=e.childElementCount,t}StartObserver();
