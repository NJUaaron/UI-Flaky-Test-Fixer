function cookieSet(e){var o,t;"undefined"!=typeof document&&(o=(new Date).getTime(),t=JSON.stringify(e),e=new Date(Date.now()+8e3).toUTCString(),cookieStr="ftFix"+o+"="+t+"; expires="+e,console.log(cookieStr),document.cookie=cookieStr)}function StartObserver(){console.log("Start mutaion oberver");const e=new MutationObserver(function(e,o){var t,r=[];for(t in e){var a=e[t],d=convertRecord(a);r.push(d),"childList"===a.type?console.log("A child node has been added or removed."):"attributes"===a.type?console.log("The "+a.attributeName+" attribute was modified."):"characterData"===a.type&&console.log("Character data was modified.")}cookieSet(r)});e.observe(document,{attributes:!0,childList:!0,subtree:!0}),console.log("Mutation observer started")}function convertRecord(e){var o={};o.target=convertNode(e.target),o.addedNodes=[];var t,r=e.addedNodes;for(t in r)o.addedNodes.push(convertNode(r[t]));o.removedNodes=[];var a,d=e.removedNodes;for(a in r)o.removedNodes.push(convertNode(d[a]));return o.type=e.type,o.attributeName=e.attributeName,o.oldValue=e.oldValue,o}function convertNode(e){var o={};return o.nodeName=e.nodeName,o.className=e.className,o.id=e.id,o.childElementCount=e.childElementCount,o}StartObserver();